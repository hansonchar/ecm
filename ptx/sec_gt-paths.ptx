<?xml version="1.0" encoding="UTF-8"?>
<section xmlns:xi="http://www.w3.org/2001/XInclude" xml:id="sec_paths">
<title>Walking Around Graphs</title>


  <introduction>
  <question>
    <statement>
      <p>
        On the table rest 8 dominoes, as shown below.  If you were to line them up in a single row, so that any two sides touching had matching numbers, what would the sum of the two end numbers be?
      </p>
      
      <sidebyside width="10%">
        <image>
          <latex-image>
            \begin{tikzpicture}
              \dominoborder
              \draw (0,0) \fourdots (0,1) \twodots;;
            \end{tikzpicture}
          </latex-image>
        </image>       
         <image>
          <latex-image>
            \begin{tikzpicture}
              \dominoborder
              \draw (0,0) \twodots (0,1) \sixdots;
            \end{tikzpicture}
          </latex-image>
        </image>
        <image>
         <latex-image>
           \begin{tikzpicture}
            \dominoborder
             \draw (0,0) \threedots (0,1) \onedot;
           \end{tikzpicture}
         </latex-image>
       </image>
       <image>
        <latex-image>
          \begin{tikzpicture}
           \dominoborder
            \draw (0,0) \sixdots (0,1) \fourdots;
          \end{tikzpicture}
        </latex-image>
      </image>
      <image>
       <latex-image>
         \begin{tikzpicture}
          \dominoborder
           \draw (0,0) \threedots (0,1) \fivedots;
         \end{tikzpicture}
       </latex-image>
     </image>
     <image>
      <latex-image>
        \begin{tikzpicture}
         \dominoborder
          \draw (0,0) \threedots (0,1) \fourdots;
        \end{tikzpicture}
      </latex-image>
    </image>
    <image>
     <latex-image>
       \begin{tikzpicture}
        \dominoborder
         \draw (0,0) \fivedots (0,1) \sixdots;
       \end{tikzpicture}
     </latex-image>
   </image>
   <image>
    <latex-image>
      \begin{tikzpicture}
       \dominoborder
        \draw (0,0) \sixdots (0,1) \threedots;
      \end{tikzpicture}
    </latex-image>
  </image>
      </sidebyside>
    </statement>
  </question>

<activity>
<p>
An <term>Euler path</term>, in a graph or multigraph, is a walk through the graph which uses every edge exactly once. An <term>Euler circuit</term> is an Euler path which starts and stops at the same vertex. Our goal is to find a quick way to check whether a graph (or multigraph) has an Euler path or circuit.

<ol>
  <li>
<p>
Which of the graphs/multigraphs below have Euler paths? Which have Euler circuits?
</p>
<sidebyside widths="18% 18% 36% 22%" margins="auto" valign="bottom">
  <image>
  <latex-image>\begin{tikzpicture}[scale=0.9]
    \draw (-1,0) \v -- (1,0)\v -- (1,2) \v -- (-1, 2) \v -- (-1,0) -- (1,2) (-1,2) -- (1,0) (0,1) \v;
    \draw (-1,2) -- (0,3) \v -- (1,2);
  \end{tikzpicture}</latex-image>
  </image>
  <image>
  <latex-image>\begin{tikzpicture}[scale=0.9]
    \draw (-1,0) \v -- (1,0)\v -- (1,2) \v -- (-1, 2) \v -- (-1,0) -- (1,2) (-1,2) -- (1,0) (0,1) \v;
  \end{tikzpicture}</latex-image>
  </image>
  <image>
  <latex-image>\begin{tikzpicture}[scale=0.9]
    \draw (-1,0) \v -- (1,0)\v -- (1,2) \v -- (-1, 2) \v -- (-1,0) -- (1,2) (-1,2) -- (1,0) (0,1) \v;
    \draw (-1,0) -- (-2,1) \v -- (-1,2) (1,2) -- (2,1) \v -- (1,0);
  \end{tikzpicture}</latex-image>
  </image>
  <image>
  <latex-image>\begin{tikzpicture}[yscale=.45]
   \draw (-1,-2) \v to [out=120, in=240] (-1,0) \v to [out=120, in=240] (-1,2) \v to [out=300, in=60] (-1,0) to [out=300, in=60] (-1,-2);
    \draw (1,0) \v -- (-1,2) (-1,0) -- (1,0) -- (-1,-2);
    \end{tikzpicture}</latex-image>
  </image>
</sidebyside>
</li>

<li>
<p>
List the degrees of each vertex of the (multi)graphs above. Is there a connection between degrees and the existence of Euler paths and circuits?
</p>
</li>
<li>
<p>
Is it possible for a graph with a degree 1 vertex to have an Euler circuit? If so, draw one. If not, explain why not. What about an Euler path?
</p>
</li>
<li>
<p>
What if every vertex of the graph has degree 2. Is there an Euler path? An Euler circuit? Draw some graphs.
</p>
</li>
<li>
<p>
Below is <em>part</em> of a graph. Even though you can only see some of the vertices, can you deduce whether the graph will have an Euler path or circuit?
</p>
<sidebyside width="54%">
  <image>
  <latex-image>\begin{tikzpicture}[scale=0.9]
    \draw (-2,0) \v -- (0,1) \v -- (2,0) \v;
    \draw (-2,0) -- (-2.5, -.5) (-2,0) -- (-2, -.5) (-2,0) -- (-1.5,-.5);
    \draw[dashed] (-2.5, -.5) -- (-3, -1) (-2,-.5) -- (-2,-1) (-1.5,-.5) -- (-1,-1);
      \draw (2,0) -- (2.5, -.5) (2,0) -- (2, -.5) (2,0) -- (1.5,-.5);
    \draw[dashed] (2.5, -.5) -- (3, -1) (2,-.5) -- (2,-1) (1.5,-.5) -- (1,-1);
      \draw (0,1) -- (-.25, 0) (0,1) -- (0, 0) (0,1) -- (.25,0);
    \draw[dashed] (-.25, 0) -- (-.5, -1) (0,0) -- (0,-1) (.25,0) -- (.5,-1);
   \end{tikzpicture}</latex-image>
  </image>
</sidebyside>
</li>
</ol>
</p>

</activity>
<p>
If we start at a vertex and trace along edges to get to other vertices, we create a <em>walk</em> through the graph.  More precisely, a <term>walk</term> in a graph is a sequence of vertices such that every vertex in the sequence is adjacent to the vertices before and after it in the sequence. If the walk travels along every edge exactly once, then the walk is called an <term>Euler path</term> (or <term>Euler trail</term> or <term>Euler walk</term>). If, in addition, the starting and ending vertices are the same (so you trace along every edge exactly once and end up where you started), then the walk is called an <term>Euler circuit</term> (or <term>Euler tour</term>). Of course if a graph is not connected, there is no hope of finding such a path or circuit. For the rest of this section, assume all the graphs discussed are connected.
</p>

<p>
The bridges of Königsberg problem is really a question about the existence of Euler paths. There will be a route that crosses every bridge exactly once if and only if the graph below has an Euler path:
</p>


<sidebyside width="22%">
  <image>
  <latex-image>\begin{tikzpicture}[scale=1, yscale=.5]
  \draw (-1,-2) \v to [out=120, in=240] (-1,0) \v to [out=120, in=240] (-1,2) \v to [out=300, in=60] (-1,0) to [out=300, in=60] (-1,-2);
  \draw (1,0) \v -- (-1,2) (-1,0) -- (1,0) -- (-1,-2);
  \end{tikzpicture}</latex-image>
  </image>
</sidebyside>

<p>
This graph is small enough that we could actually check every possible walk that does not reuse edges, and in doing so convince ourselves that there is no Euler path (let alone an Euler circuit). On small graphs which do have an Euler path, it is usually not difficult to find one. Our goal is to find a quick way to check whether a graph has an Euler path or circuit, even if the graph is quite large.
</p>

<p>
One way to guarantee that a graph does <em>not</em> have an Euler circuit is to include a <q>spike,</q> a vertex of degree 1.
</p>
<sidebyside width="23%">
  <image>
  <latex-image>\begin{tikzpicture}
    \draw (-1,0) \v -- (0,1) \v -- (1,0) \v -- cycle;
    \draw (0,1) -- (1,1) \v node[below right]{\(a\)};
   \end{tikzpicture}</latex-image>
  </image>
</sidebyside>
<p>
The vertex <m>a</m> has degree 1, and if you try to make an Euler circuit, you see that you will get stuck at the vertex. It is a dead end. That is, unless you start there. But then there is no way to return, so there is no hope of finding an Euler circuit. There is however an Euler path. It starts at the vertex <m>a</m>, then loops around the triangle. You will end at the vertex of degree 3.
</p>

<p>
You run into a similar problem whenever you have a vertex of any odd degree. If you start at such a vertex, you will not be able to end there (after traversing every edge exactly once). After using one edge to leave the starting vertex, you will be left with an even number of edges emanating from the vertex. Half of these could be used for returning to the vertex, the other half for leaving. So you return, then leave. Return, then leave. The only way to use up all the edges is to use the last one by leaving the vertex. On the other hand, if you have a vertex with odd degree that you do not start a path at, then you will eventually get stuck at that vertex. The path will use pairs of edges incident to the vertex to arrive and leave again. Eventually all but one of these edges will be used up, leaving only an edge to arrive by, and none to leave again.
</p>

<p>
What all this says is that if a graph has an Euler path and two vertices with odd degree, then the Euler path must start at one of the odd degree vertices and end at the other. In such a situation, every other vertex <em>must</em> have an even degree since we need an equal number of edges to get to those vertices as to leave them. How could we have an Euler circuit? The graph could not have any odd degree vertex as an Euler path would have to start there or end there, but not both. Thus for a graph to have an Euler circuit, all vertices must have even degree.
</p>

<p>
So there is clearly a connection between the parity of vertex degrees and Euler paths and circuits.  Here are two theorems the describe that connection.
</p>


<theorem xml:id="thm-eulercircuit">
<p>
  A connected graph has an Euler circuit if and only if the degree of every vertex is even.
  </p>
</theorem>
<theorem xml:id="thm-eulerpath">
  <p>
  A connected graph has an Euler path if and only if there are at most two vertices with odd degree.
  </p>
</theorem>

<p>
We will need to prove these theorems, and doing so will give us an excuse to think about proving theorems in general.  However, note that these theorems answer the bridges of Königsberg problem.  The graph has all four vertices with odd degree, there is no Euler path through the graph.  Thus there is no way for the townspeople to cross every bridge exactly once.
</p>
</introduction>

<subsection>
  <title>Interlude: Implications and Proofs</title>
  <p>
    We would like to prove the theorems we conjectured above about Euler paths and circuits.  To help us understand how we could do this, and to make sure our proof is correct, we should take a few moments to recall some basic facts about mathematical statements, their logical form, and how this can help us in writing proofs.  A more detailed discussion of these topics is found in <xref ref="sec_background-logic">Sections</xref> and <xref ref="sec_background-proofs" type="global"/>.
  </p>

  <p>
    All mathematical statements have a <em>logical form</em> that determines the meaning of the statement and often suggests a method for proving (or disproving) the statement.  At the most basic level, a statement might be <term>atomic</term>, if it is not composed of simpler statements, or otherwise <term>molecular</term>.  A molecular statement is built up of smaller statements by connecting them with a <term>logical connective</term>.
    Such statements might be a <term>conjunction</term> (two statements connected by an <q>and</q>) a <term>disjunction</term> (two statements connected by an <q>or</q>), an <term>implication</term> or <term>conditional</term> (usually in the form <q>if <ellipsis /> then <ellipsis /></q>), or a <term>negation</term> (claiming a statement is <em>not</em> true).
  </p>

  <p>
    There are other logical connectives, used both in mathematical statements and in ordinary language, but every one can be reduced to these four (actually, you can get away with as few as two of them).   For example, it is very common in mathematics to encounter statements of the form <q><m>P</m> if and only if <m>Q</m>.</q>  This is called a <term>biconditional</term>, but it is nothing more than the conjunction of two implications.  That is, <q><m>P</m> if and only if <m>Q</m></q> means <q>if <m>P</m> then <m>Q</m>, and if <m>Q</m> then <m>P</m>.</q>
  </p>

  <p>
    The truth of falsity of a molecular statement is determined entirely by the truth or falsity of its parts, governed by set rules of the connectives.  These rules can be communicated through <term>truth tables</term>.  We use the standard symbols <m>\wedge</m> for <q>and</q>, <m>\vee</m> for <q>or</q>, <m>\imp</m> for implications and <m>\neg</m> for negations.
  </p>

  <sidebyside width="20%" margins="auto">
    <tabular halign="center">
      <col right="minor"/>
      <col right="medium"/>
      <col/>
      <row bottom="minor">
        <cell><m>P</m></cell>
        <cell><m>Q</m></cell>
        <cell><m>P\wedge Q</m></cell>
      </row>
      <row>
        <cell>T</cell>
        <cell>T</cell>
        <cell>T</cell>
      </row>
      <row>
        <cell>T</cell>
        <cell>F</cell>
        <cell>F</cell>
      </row>
      <row>
        <cell>F</cell>
        <cell>T</cell>
        <cell>F</cell>
      </row>
      <row>
        <cell>F</cell>
        <cell>F</cell>
        <cell>F</cell>
      </row>
    </tabular>
    <tabular halign="center">
      <col right="minor"/>
      <col right="medium"/>
      <col/>
      <row bottom="minor">
        <cell><m>P</m></cell>
        <cell><m>Q</m></cell>
        <cell><m>P\vee Q</m></cell>
      </row>
      <row>
        <cell>T</cell>
        <cell>T</cell>
        <cell>T</cell>
      </row>
      <row>
        <cell>T</cell>
        <cell>F</cell>
        <cell>T</cell>
      </row>
      <row>
        <cell>F</cell>
        <cell>T</cell>
        <cell>T</cell>
      </row>
      <row>
        <cell>F</cell>
        <cell>F</cell>
        <cell>F</cell>
      </row>
    </tabular>
    <tabular halign="center">
      <col right="minor"/>
      <col right="medium"/>
      <col/>
      <row bottom="minor">
        <cell><m>P</m></cell>
        <cell><m>Q</m></cell>
        <cell><m>P\imp Q</m></cell>
      </row>
      <row>
        <cell>T</cell>
        <cell>T</cell>
        <cell>T</cell>
      </row>
      <row>
        <cell>T</cell>
        <cell>F</cell>
        <cell>F</cell>
      </row>
      <row>
        <cell>F</cell>
        <cell>T</cell>
        <cell>T</cell>
      </row>
      <row>
        <cell>F</cell>
        <cell>F</cell>
        <cell>T</cell>
      </row>
    </tabular>
    <tabular halign="center">
      <col right="medium"/>
      <col/>
      <row bottom="minor">
        <cell><m>P</m></cell>
        <cell><m>\neg P</m></cell>
      </row>
      <row>
        <cell>T</cell>
        <cell>F</cell>
      </row>
      <row>
        <cell>F</cell>
        <cell>T</cell>
      </row>
      <row>
        <cell/>
      </row>
    </tabular>
  </sidebyside>
  <p>
    Note that the truth table for <m>P \vee Q</m> shows us that we always mean the <em>inclusive or</em>, in that when both <m>P</m> and <m>Q</m> are true, we say that <m>P \vee Q</m> is true.
  </p>

  <p>
    The other truth table worth looking closely at is the one for implications.  This might strike you as strange at first.  If <m>P</m> is false, the implication <m>P \imp Q</m> is true (no matter the truth value of <m>Q</m>).  Also, there is no need for <m>P</m> to <q>cause</q> <m>Q</m> to be true.  For example, the statement <q>If 2 is even, then 2 is prime</q> is true, despite there being no connection between the concepts of <q>even</q> and <q>prime</q>.
  </p>

  <activity>
    <introduction>
      <p>
        Decide which of the statements below are true and which are false.
      </p>
    </introduction>
    <task>
      <p>
        If 8 is prime, then the 7624th digit of <m>\pi</m> is an 8.
      </p>
    </task>
    <task>
      <p>
        If the 7624th digit of <m>\pi</m> is an 8, then <m>5</m> is prime.
      </p>
    </task>
    <task>
      <p>
        If 5 is prime, then most horses have 4 legs.
      </p>
    </task>
    <task>
      <p>
        If 5 is prime, then 8 is prime.
      </p>
    </task>
  </activity>

  <p>
    Examining the truth table for <m>P \imp Q</m> further, we notice that it is possible for <m>P \imp Q</m> to be true but <m>Q \imp P</m> to be false. (What would the truth values of <m>P</m> and <m>Q</m> need to be to make this the case?) We call <m>Q \imp P</m> the <term>converse</term> of <m>P \imp Q</m>.
  </p>

  <activity>
    <statement>
      <p>
        Give three examples of implications which are true whose converse is false.  Then give three examples of implications which are true whose converse is true.
      </p>
    </statement>
    <hint>
      <p>
        You might think about the relationship between a function being continuous and being differentiable.  Or a shape being a square or a rectangle.
      </p>
    </hint>
  </activity>

  <p>
    The claim <m>P</m> if and only if <m>Q</m> is the claim that both an implication and its converse are true.  This is the form that <xref ref="thm-eulercircuit">Theorems</xref> and <xref ref="thm-eulerpath" type="global"/> about Euler circuits and paths take.  Looking at the form, we see what it would take to prove them.
  </p>

  <p>
    To prove a biconditional, you simply must prove both implications (the implication and its converse).  How do you prove an implication though?  Well, by looking at the truth table, we see that we must prove that we are always in rows 1, 3, or 4.  The only case we need to exclude is the one where <m>P</m> is true and <m>Q</m> is false.
  </p>

  <p>
    So assume <m>P</m> is true (the other case is automatic).  Under this assumption, we argue that <m>Q</m> is true as well.
  </p>

  <p>
    Alternatively, we could start by assuming <m>Q</m> is false.  If we can then conclude that <m>P</m> is also false, we have excluded the one suspect case, as we can conclude that <m>P \imp Q</m>.  You could also conclude that <m>\neg Q \imp \neg P</m>, which is the <term>contrapositive</term> of <m>P \imp Q</m>.  By comparing truth tables, it is easy to see that any implication is equivalent to its contrapositive, so proving a contrapositive is equivalent to proving its implication.
  </p>

  <p>
    There is one important piece we should mention here: the use of quantifiers.
  </p>

  <activity>
    <statement>
      <p>
        Is it possible for both a statement and its converse to be false?  What could you say about <m>P</m> and <m>Q</m> for such a statement?
      </p>
    </statement>
  </activity>

  <p>
    What about the statement, <q>if <m>p</m> is prime, then <m>p</m> is odd</q>.  This statement is false.  So is its converse.  But the truth tables for <m>P \imp Q</m> and <m>Q \imp P</m> do not have a false in the same row.  So what is going on?
  </p>

  <p>
    The key is that we are secretly adding a <term>universal quantifier</term> in front of statements like this.  What we really mean is that <em>for all <m>p</m></em>, if <m>p</m> is prime, then <m>p</m> is odd.  This is false, because <em>there exists</em> (the <term>existential quantifier</term>) some counterexample.  The converse of the statement is, for all <m>p</m>, if <m>p</m> is odd, then <m>p</m> is prime.  This is also false, because there exists a counterexample.  Necessarily, it will be a different counterexample than the one that proved the implication was false.
  </p>

  <p>
    How do you prove a universally quantified statement is true?  You must prove the implication is true <em>for all</em> cases.  To prove that for all <m>n</m>, if <m>n^2</m> is even, then so is <m>n</m>, you must prove this for <m>n = 1</m>, <m>n = 2</m>, <m>n =3</m>, etc.  But to get on with your life, you might as well prove it for all of them at once.  Let <m>n</m> be an arbitrary integer.  Now prove the statement for that arbitrary <m>n</m>.  In this case, you might want to assume <m>n</m> is NOT even and prove that <m>n^2</m> is not even, to give a proof by contrapositive.  But since <m>n</m> was arbitrary, you have shown that your poof would work for <em>any</em> value of <m>n</m>.
  </p>
</subsection>
<subsection>
  <title>Proofs for Euler Paths and Circuits</title>

  <p>
    Now let's try to prove <xref ref="thm-eulercircuit">Theorems</xref> and <xref ref="thm-eulerpath" type="global"/>.  Actually, we really only need to prove one of these, and the other one should follow from it.
  </p>

  <activity>
    <introduction>
      <p>
        Suppose we have already proved <xref ref="thm-eulercircuit"/>, that a graph has an Euler circuit if and only if every vertex has even degree.  Suppose now we want to prove <xref ref="thm-eulerpath"/>, that a graph has an Euler path if and only if it has at most two odd degree vertices.
      </p>
    </introduction>
    <task>
      <statement>
        <p>
          Given a graph with an Euler path, how can you get a graph that definitely has an Euler circuit?  How did this affect the number of odd degree vertices?
        </p>
      </statement>
      <hint>
        <p>
          Add something to your graph so you can <q>finish</q> the Euler path.  Don't forget to consider the case that the start and end vertex are already adjacent.
        </p>
      </hint>
    </task>
    <task>
      <statement>
        <p>
          Given a graph with at most two odd degree vertices, build a graph that has only even degree vertices.  If you have an Euler circuit of your new graph, what would that Euler circuit become if you looked at your original graph?
        </p>
      </statement>
      <hint>
        <p>
          If there are no odd degree vertices, you are done.  If there are two, you could connect them with an edge, except maybe they are already adjacent.  What could you do then?
        </p>
      </hint>
    </task>
    <task>
      <statement>
        <p>
          What do each of the above tasks demonstrate?  That is, write a proof of <xref ref="thm-eulerpath"/> assuming <xref ref="thm-eulercircuit"/>.  Make sure you specify how each <q>direction</q> (implication and converse) of the proof is established by the tasks above.
        </p>
      </statement>
    </task>
  </activity>

  <p>
    Good, so we only need to prove <xref ref="thm-eulercircuit"/>.
  </p>

  <activity>
    <statement>
      <p>
        Which of the two implications will be easier to prove?  State both implications and say specifically what it would take to prove each.  Say what would be required both for doing a direct proof and a proof by contrapositive.
      </p>
    </statement>
  </activity>

  <activity>
    <statement>
      <p>
        Suppose you had a graph and were given an Euler circuit for that graph.  How might you represent that Euler circuit?  If you listed each edge in order, where each edge was given as a pair of vertices, how many times would each vertex appear in the list?  What have you just shown?
      </p>
    </statement>
  </activity>

  <p>
    The other direction is harder.  If you know every vertex has even degree, you must now show there is an Euler circuit.  One thing you could do is to give a procedure for building one.  But then you must prove that this procedure is correct.  We will come back to this question when we look at mathematical induction.
  </p>
</subsection>


<subsection>
<title>Hamilton Paths</title>
<p>
Suppose you wanted to tour Königsberg in such a way where you visit each land mass (the two islands and both banks) exactly once. This can be done. In graph theory terms, we are asking whether there is a path which visits every vertex exactly once. Such a path is called a <term>Hamilton path</term> (or <term>Hamiltonian path</term>)<idx><h>Hamilton path</h></idx>.  We could also consider <term>Hamilton cycles</term>, which are Hamilton paths which start and stop at the same vertex.
</p>

<example>
  <statement>
    <p>
      Determine whether the graphs below have a Hamilton path.
    </p>

    <sidebyside widths="20% 20%" margins="auto">
      <image>
        <latex-image>

          \begin{tikzpicture}[scale=.5]
          \draw  (18:2) -- (90:2) -- (162:2)  -- (234:2) -- (306:2) -- cycle;
          \draw  (18:1) --  (162:1)  -- (306:1) -- (90:1) -- (234:1) --cycle;
          \foreach \x in {18, 90, 162, 234, 306}
          \draw  (\x:1) \v -- (\x:2) \v;
          \end{tikzpicture}

        </latex-image>
      </image>
      <image>
        <latex-image>

          \begin{tikzpicture}{scale=.5}
          \draw  (18:1) -- (90:1) -- (162:1)  -- (234:1) -- (306:1) -- cycle;
          \draw  (18:1) --  (162:1)  -- (306:1) -- (90:1) -- (234:1) --cycle;
          \foreach \x in {18, 90, 162, 234, 306}
          \draw  (\x:1) \v -- (\x:2) \v;
          \end{tikzpicture}

        </latex-image>
      </image>

    </sidebyside>

  </statement>

  <solution>
    <p>
      The graph on the left has a Hamilton path (many different ones, actually), as shown here:
    </p>

    <sidebyside width="20%">
      <image>
        <latex-image>

          \begin{tikzpicture}[scale=.5]
          \draw[very thick, -&gt;-] (90:2) -- (90:1) (90:1) -- (234:1) (234:1)  -- (234:2) -- (162:2) -- (162:1) -- (18:1) -- (18:2) -- (306:2) -- (306:1);
          \draw  (18:2) -- (90:2) -- (162:2)  -- (234:2) -- (306:2) -- cycle;
          \draw  (18:1) --  (162:1)  -- (306:1) -- (90:1) -- (234:1) --cycle;
          \foreach \x in {18, 90, 162, 234, 306}
          \draw  (\x:1) \v -- (\x:2) \v;
          \end{tikzpicture}

        </latex-image>
      </image>
    </sidebyside>

  <p>
    The graph on the right does not have a Hamilton path.  You would need to visit each of the <q>outside</q> vertices, but as soon as you visit one, you get stuck.  Note that this graph does not have an Euler path, although there are graphs with Euler paths but no Hamilton paths.
  </p>

</solution>
</example>



<p>
It appears that finding Hamilton paths would be easier because graphs often have more edges than vertices, so there are fewer requirements to be met. However, nobody knows whether this is true. There is no known simple test for whether a graph has a Hamilton path. For small graphs this is not a problem, but as the size of the graph grows, it gets harder and harder to check whether there is a Hamilton path. In fact, this is an example of a question which as far as we know is too difficult for computers to solve; it is an example of a problem which is NP-complete<idx><h>NP-complete</h></idx>.
</p>

<p>
  While a complete classification for which graphs have Hamilton paths is hard, there are some simpler things we can say.  The following is one example.
</p>

<activity>

      <introduction>
        <p>
          Consider the following graph:
        </p>
        <sidebyside width="28%">
          <image>
            <latex-image>

            \begin{tikzpicture}[scale=.7]
            \foreach \x in {0, 45, ..., 315}
              \draw  (\x:2) \v -- (\x+45:2);
            \draw (0,0) \v -- (45:2) (0,0) -- (135:2) (0,0) -- (225:2) (0,0) -- (315:2);
            \draw (-1,0) \v -- (90:2) (-1,0) -- (180:2) (-1,0) -- (270:2);
            \draw (1,0) \v -- (90:2) (1,0) -- (0:2) (1,0) -- (270:2);
            \end{tikzpicture}

            </latex-image>
          </image>
        </sidebyside>
        </introduction>
        <task>
          <statement>
            <p>
              Find a Hamilton path.  Can your path be extended to a Hamilton cycle?
            </p>
          </statement>
        </task>
        <task>
          <statement>
            <p>
              Is the graph bipartite? If so, how many vertices are in each <q>part</q>?
            </p>
          </statement>
        </task>
        <task>
          <statement>
            <p>
              Use your answer to part (b) to prove that the graph has no Hamilton cycle.
            </p>
          </statement>
        </task>
        <task>
          <statement>
            <p>
              Suppose you have a bipartite graph <m>G</m> in which one part has at least two more vertices than the other.  Prove that <m>G</m> does not have a Hamilton path.
            </p>
          </statement>
        </task>
      </activity>


</subsection>


</section>
